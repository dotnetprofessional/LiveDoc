{"features":[{"type":"Feature","ruleViolations":[],"statistics":{"passCount":47,"failedCount":0,"pendingCount":8,"totalCount":55,"totalRuleViolations":0,"duration":62,"passPercent":0.8545454545454545,"failedPercent":0,"pendingPercent":0.14545454545454545},"scenarios":[{"type":"ScenarioOutline","ruleViolations":[],"statistics":{"passCount":12,"failedCount":0,"pendingCount":0,"totalCount":12,"totalRuleViolations":0,"duration":21,"passPercent":1,"failedPercent":0,"pendingPercent":0},"steps":[{"title":"the livedoc rules are","status":"pass","exception":{},"description":"","docString":"{\n    \"singleGivenWhenThen\": \"enabled\"\n}","values":[],"ruleViolations":[],"type":"Given","sequence":1,"id":"10wnlox4vib-a5bcvpooxs-w1ea6pzn7p","code":"() => {\r\n            ruleOptions.rules = stepContext.docStringAsEntity;\r\n        }","duration":2},{"title":"the following feature","status":"pass","exception":{},"description":"","docString":"feature(\"Validate the use of multiple steps\", ()=> {\n    scenario(\"Multiple givens are used in a scenario\", ()=>{\n        given(\"given sample 1\", () => { });            \n        given(\"given sample 2\", () => { });                \n    });\n});","values":[],"ruleViolations":[],"type":"and","sequence":2,"id":"10wnlox4vib-a5bcvpooxs-le9eyh2c2d","code":"() => {\r\n            outlineGiven = stepContext;\r\n        }","duration":1},{"title":"executing feature","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":3,"id":"10wnlox4vib-a5bcvpooxs-144l3mxesp9","code":"() => __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                yield livedoc_1.LiveDoc.executeDynamicTestAsync(outlineGiven.docString, ruleOptions);\r\n            }\r\n            catch (e) {\r\n                violation = e;\r\n            }\r\n        })","duration":10},{"title":"a rule violation with the following description is thrown","status":"pass","exception":{},"description":"","docString":"there should be only one Given in a Scenario, Scenario Outline or Background. Try using and or but instead.","values":[],"ruleViolations":[],"type":"Then","sequence":4,"id":"10wnlox4vib-a5bcvpooxs-16p1n12hr2d","code":"() => {\r\n            stepContext.docString.should.eql(violation.message);\r\n        }","duration":1}],"tables":[{"name":"","description":"","dataTable":[["step","display name"],["given","Given"],["when","When"],["then","Then"]]}],"examples":[{"type":"ScenarioExample","ruleViolations":[],"statistics":{"passCount":4,"failedCount":0,"pendingCount":0,"totalCount":4,"totalRuleViolations":0,"duration":14,"passPercent":1,"failedPercent":0,"pendingPercent":0},"steps":[{"title":"the livedoc rules are","status":"pass","exception":{},"description":"","docString":"{\n    \"singleGivenWhenThen\": \"enabled\"\n}","values":[],"ruleViolations":[],"type":"Given","sequence":1,"id":"10wnlox4vib-a5bcvpooxs-w1ea6pzn7p","code":"() => {\r\n            ruleOptions.rules = stepContext.docStringAsEntity;\r\n        }","duration":2},{"title":"the following feature","status":"pass","exception":{},"description":"","docString":"feature(\"Validate the use of multiple steps\", ()=> {\n    scenario(\"Multiple givens are used in a scenario\", ()=>{\n        given(\"given sample 1\", () => { });            \n        given(\"given sample 2\", () => { });                \n    });\n});","values":[],"ruleViolations":[],"type":"and","sequence":2,"id":"10wnlox4vib-a5bcvpooxs-le9eyh2c2d","code":"() => {\r\n            outlineGiven = stepContext;\r\n        }","duration":1},{"title":"executing feature","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":3,"id":"10wnlox4vib-a5bcvpooxs-144l3mxesp9","code":"() => __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                yield livedoc_1.LiveDoc.executeDynamicTestAsync(outlineGiven.docString, ruleOptions);\r\n            }\r\n            catch (e) {\r\n                violation = e;\r\n            }\r\n        })","duration":10},{"title":"a rule violation with the following description is thrown","status":"pass","exception":{},"description":"","docString":"there should be only one Given in a Scenario, Scenario Outline or Background. Try using and or but instead.","values":[],"ruleViolations":[],"type":"Then","sequence":4,"id":"10wnlox4vib-a5bcvpooxs-16p1n12hr2d","code":"() => {\r\n            stepContext.docString.should.eql(violation.message);\r\n        }","duration":1}],"example":{"step":"given","displayname":"Given"},"title":"Setting the LiveDocOptions to enabled for rules","sequence":1,"id":"10wnlox4vib-a5bcvpooxs"},{"type":"ScenarioExample","ruleViolations":[],"statistics":{"passCount":4,"failedCount":0,"pendingCount":0,"totalCount":4,"totalRuleViolations":0,"duration":4,"passPercent":1,"failedPercent":0,"pendingPercent":0},"steps":[{"title":"the livedoc rules are","status":"pass","exception":{},"description":"","docString":"{\n    \"singleGivenWhenThen\": \"enabled\"\n}","values":[],"ruleViolations":[],"type":"Given","sequence":1,"id":"10wnlox4vib-a5bcvpooxs-w1ea6pzn7p","code":"() => {\r\n            ruleOptions.rules = stepContext.docStringAsEntity;\r\n        }","duration":0},{"title":"the following feature","status":"pass","exception":{},"description":"","docString":"feature(\"Validate the use of multiple steps\", ()=> {\n    scenario(\"Multiple whens are used in a scenario\", ()=>{\n        when(\"when sample 1\", () => { });            \n        when(\"when sample 2\", () => { });                \n    });\n});","values":[],"ruleViolations":[],"type":"and","sequence":2,"id":"10wnlox4vib-a5bcvpooxs-b30mb45vnk","code":"() => {\r\n            outlineGiven = stepContext;\r\n        }","duration":0},{"title":"executing feature","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":3,"id":"10wnlox4vib-a5bcvpooxs-144l3mxesp9","code":"() => __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                yield livedoc_1.LiveDoc.executeDynamicTestAsync(outlineGiven.docString, ruleOptions);\r\n            }\r\n            catch (e) {\r\n                violation = e;\r\n            }\r\n        })","duration":4},{"title":"a rule violation with the following description is thrown","status":"pass","exception":{},"description":"","docString":"there should be only one When in a Scenario, Scenario Outline or Background. Try using and or but instead.","values":[],"ruleViolations":[],"type":"Then","sequence":4,"id":"10wnlox4vib-a5bcvpooxs-si70tzza7f","code":"() => {\r\n            stepContext.docString.should.eql(violation.message);\r\n        }","duration":0}],"example":{"step":"when","displayname":"When"},"title":"Setting the LiveDocOptions to enabled for rules","sequence":2,"id":"10wnlox4vib-a5bcvpooxs"},{"type":"ScenarioExample","ruleViolations":[],"statistics":{"passCount":4,"failedCount":0,"pendingCount":0,"totalCount":4,"totalRuleViolations":0,"duration":3,"passPercent":1,"failedPercent":0,"pendingPercent":0},"steps":[{"title":"the livedoc rules are","status":"pass","exception":{},"description":"","docString":"{\n    \"singleGivenWhenThen\": \"enabled\"\n}","values":[],"ruleViolations":[],"type":"Given","sequence":1,"id":"10wnlox4vib-a5bcvpooxs-w1ea6pzn7p","code":"() => {\r\n            ruleOptions.rules = stepContext.docStringAsEntity;\r\n        }","duration":0},{"title":"the following feature","status":"pass","exception":{},"description":"","docString":"feature(\"Validate the use of multiple steps\", ()=> {\n    scenario(\"Multiple thens are used in a scenario\", ()=>{\n        then(\"then sample 1\", () => { });            \n        then(\"then sample 2\", () => { });                \n    });\n});","values":[],"ruleViolations":[],"type":"and","sequence":2,"id":"10wnlox4vib-a5bcvpooxs-eau6krplz9","code":"() => {\r\n            outlineGiven = stepContext;\r\n        }","duration":0},{"title":"executing feature","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":3,"id":"10wnlox4vib-a5bcvpooxs-144l3mxesp9","code":"() => __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                yield livedoc_1.LiveDoc.executeDynamicTestAsync(outlineGiven.docString, ruleOptions);\r\n            }\r\n            catch (e) {\r\n                violation = e;\r\n            }\r\n        })","duration":3},{"title":"a rule violation with the following description is thrown","status":"pass","exception":{},"description":"","docString":"there should be only one Then in a Scenario, Scenario Outline or Background. Try using and or but instead.","values":[],"ruleViolations":[],"type":"Then","sequence":4,"id":"10wnlox4vib-a5bcvpooxs-cig8x18zj4","code":"() => {\r\n            stepContext.docString.should.eql(violation.message);\r\n        }","duration":0}],"example":{"step":"then","displayname":"Then"},"title":"Setting the LiveDocOptions to enabled for rules","sequence":3,"id":"10wnlox4vib-a5bcvpooxs"}],"title":"Setting the LiveDocOptions to enabled for rules","description":"","tags":[]},{"type":"ScenarioOutline","ruleViolations":[],"statistics":{"passCount":12,"failedCount":0,"pendingCount":0,"totalCount":12,"totalRuleViolations":0,"duration":18,"passPercent":1,"failedPercent":0,"pendingPercent":0},"steps":[{"title":"the livedoc rules are","status":"pass","exception":{},"description":"","docString":"{\n    \"singleGivenWhenThen\": \"warning\"\n}","values":[],"ruleViolations":[],"type":"Given","sequence":1,"id":"10wnlox4vib-a59nie2jls-b366tu3t7k","code":"() => {\r\n            ruleOptions.rules = stepContext.docStringAsEntity;\r\n        }","duration":0},{"title":"the following feature","status":"pass","exception":{},"description":"","docString":"feature(\"Validate the use of multiple steps\", ()=> {\n    scenario(\"Multiple givens are used in a scenario\", ()=>{\n        given(\"a given\", ()=> {});\n        when(\"a when\", ()=> {});\n        then(\"a then\", ()=> {});\n        given(\"given duplicate\", () => { });            \n    });\n});","values":[],"ruleViolations":[],"type":"and","sequence":2,"id":"10wnlox4vib-a59nie2jls-ns2cnwun5f","code":"() => {\r\n            outlineGiven = stepContext;\r\n        }","duration":0},{"title":"executing feature","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":3,"id":"10wnlox4vib-a59nie2jls-144l3mxesp9","code":"() => __awaiter(this, void 0, void 0, function* () {\r\n            executionResults = yield livedoc_1.LiveDoc.executeDynamicTestAsync(outlineGiven.docString, ruleOptions);\r\n        })","duration":6},{"title":"a rule violation with the following description is added to the rule violations collection of the step","status":"pass","exception":{},"description":"","docString":"there should be only one Given in a Scenario, Scenario Outline or Background. Try using and or but instead.","values":[],"ruleViolations":[],"type":"Then","sequence":4,"id":"10wnlox4vib-a59nie2jls-cij6296h1s","code":"() => {\r\n            const step = executionResults.features[0].scenarios[0].steps[3];\r\n            step.ruleViolations[0].message.should.be.eq(stepContext.docString);\r\n        }","duration":0}],"tables":[{"name":"","description":"","dataTable":[["step","display name"],["given","Given"],["when","When"],["then","Then"]]}],"examples":[{"type":"ScenarioExample","ruleViolations":[],"statistics":{"passCount":4,"failedCount":0,"pendingCount":0,"totalCount":4,"totalRuleViolations":0,"duration":6,"passPercent":1,"failedPercent":0,"pendingPercent":0},"steps":[{"title":"the livedoc rules are","status":"pass","exception":{},"description":"","docString":"{\n    \"singleGivenWhenThen\": \"warning\"\n}","values":[],"ruleViolations":[],"type":"Given","sequence":1,"id":"10wnlox4vib-a59nie2jls-b366tu3t7k","code":"() => {\r\n            ruleOptions.rules = stepContext.docStringAsEntity;\r\n        }","duration":0},{"title":"the following feature","status":"pass","exception":{},"description":"","docString":"feature(\"Validate the use of multiple steps\", ()=> {\n    scenario(\"Multiple givens are used in a scenario\", ()=>{\n        given(\"a given\", ()=> {});\n        when(\"a when\", ()=> {});\n        then(\"a then\", ()=> {});\n        given(\"given duplicate\", () => { });            \n    });\n});","values":[],"ruleViolations":[],"type":"and","sequence":2,"id":"10wnlox4vib-a59nie2jls-ns2cnwun5f","code":"() => {\r\n            outlineGiven = stepContext;\r\n        }","duration":0},{"title":"executing feature","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":3,"id":"10wnlox4vib-a59nie2jls-144l3mxesp9","code":"() => __awaiter(this, void 0, void 0, function* () {\r\n            executionResults = yield livedoc_1.LiveDoc.executeDynamicTestAsync(outlineGiven.docString, ruleOptions);\r\n        })","duration":6},{"title":"a rule violation with the following description is added to the rule violations collection of the step","status":"pass","exception":{},"description":"","docString":"there should be only one Given in a Scenario, Scenario Outline or Background. Try using and or but instead.","values":[],"ruleViolations":[],"type":"Then","sequence":4,"id":"10wnlox4vib-a59nie2jls-cij6296h1s","code":"() => {\r\n            const step = executionResults.features[0].scenarios[0].steps[3];\r\n            step.ruleViolations[0].message.should.be.eq(stepContext.docString);\r\n        }","duration":0}],"example":{"step":"given","displayname":"Given"},"title":"Using the same top level step multiple times","sequence":1,"id":"10wnlox4vib-a59nie2jls"},{"type":"ScenarioExample","ruleViolations":[],"statistics":{"passCount":4,"failedCount":0,"pendingCount":0,"totalCount":4,"totalRuleViolations":0,"duration":5,"passPercent":1,"failedPercent":0,"pendingPercent":0},"steps":[{"title":"the livedoc rules are","status":"pass","exception":{},"description":"","docString":"{\n    \"singleGivenWhenThen\": \"warning\"\n}","values":[],"ruleViolations":[],"type":"Given","sequence":1,"id":"10wnlox4vib-a59nie2jls-b366tu3t7k","code":"() => {\r\n            ruleOptions.rules = stepContext.docStringAsEntity;\r\n        }","duration":0},{"title":"the following feature","status":"pass","exception":{},"description":"","docString":"feature(\"Validate the use of multiple steps\", ()=> {\n    scenario(\"Multiple whens are used in a scenario\", ()=>{\n        given(\"a given\", ()=> {});\n        when(\"a when\", ()=> {});\n        then(\"a then\", ()=> {});\n        when(\"when duplicate\", () => { });            \n    });\n});","values":[],"ruleViolations":[],"type":"and","sequence":2,"id":"10wnlox4vib-a59nie2jls-eau7dnb5d1","code":"() => {\r\n            outlineGiven = stepContext;\r\n        }","duration":0},{"title":"executing feature","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":3,"id":"10wnlox4vib-a59nie2jls-144l3mxesp9","code":"() => __awaiter(this, void 0, void 0, function* () {\r\n            executionResults = yield livedoc_1.LiveDoc.executeDynamicTestAsync(outlineGiven.docString, ruleOptions);\r\n        })","duration":5},{"title":"a rule violation with the following description is added to the rule violations collection of the step","status":"pass","exception":{},"description":"","docString":"there should be only one When in a Scenario, Scenario Outline or Background. Try using and or but instead.","values":[],"ruleViolations":[],"type":"Then","sequence":4,"id":"10wnlox4vib-a59nie2jls-cingt6dzk0","code":"() => {\r\n            const step = executionResults.features[0].scenarios[0].steps[3];\r\n            step.ruleViolations[0].message.should.be.eq(stepContext.docString);\r\n        }","duration":0}],"example":{"step":"when","displayname":"When"},"title":"Using the same top level step multiple times","sequence":2,"id":"10wnlox4vib-a59nie2jls"},{"type":"ScenarioExample","ruleViolations":[],"statistics":{"passCount":4,"failedCount":0,"pendingCount":0,"totalCount":4,"totalRuleViolations":0,"duration":7,"passPercent":1,"failedPercent":0,"pendingPercent":0},"steps":[{"title":"the livedoc rules are","status":"pass","exception":{},"description":"","docString":"{\n    \"singleGivenWhenThen\": \"warning\"\n}","values":[],"ruleViolations":[],"type":"Given","sequence":1,"id":"10wnlox4vib-a59nie2jls-b366tu3t7k","code":"() => {\r\n            ruleOptions.rules = stepContext.docStringAsEntity;\r\n        }","duration":1},{"title":"the following feature","status":"pass","exception":{},"description":"","docString":"feature(\"Validate the use of multiple steps\", ()=> {\n    scenario(\"Multiple thens are used in a scenario\", ()=>{\n        given(\"a given\", ()=> {});\n        when(\"a when\", ()=> {});\n        then(\"a then\", ()=> {});\n        then(\"then duplicate\", () => { });            \n    });\n});","values":[],"ruleViolations":[],"type":"and","sequence":2,"id":"10wnlox4vib-a59nie2jls-b353o4qz1c","code":"() => {\r\n            outlineGiven = stepContext;\r\n        }","duration":0},{"title":"executing feature","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":3,"id":"10wnlox4vib-a59nie2jls-144l3mxesp9","code":"() => __awaiter(this, void 0, void 0, function* () {\r\n            executionResults = yield livedoc_1.LiveDoc.executeDynamicTestAsync(outlineGiven.docString, ruleOptions);\r\n        })","duration":6},{"title":"a rule violation with the following description is added to the rule violations collection of the step","status":"pass","exception":{},"description":"","docString":"there should be only one Then in a Scenario, Scenario Outline or Background. Try using and or but instead.","values":[],"ruleViolations":[],"type":"Then","sequence":4,"id":"10wnlox4vib-a59nie2jls-cigm2mobb4","code":"() => {\r\n            const step = executionResults.features[0].scenarios[0].steps[3];\r\n            step.ruleViolations[0].message.should.be.eq(stepContext.docString);\r\n        }","duration":0}],"example":{"step":"then","displayname":"Then"},"title":"Using the same top level step multiple times","sequence":3,"id":"10wnlox4vib-a59nie2jls"}],"title":"Using the same top level step multiple times","description":"","tags":[]},{"type":"ScenarioOutline","ruleViolations":[],"statistics":{"passCount":8,"failedCount":0,"pendingCount":0,"totalCount":8,"totalRuleViolations":0,"duration":10,"passPercent":1,"failedPercent":0,"pendingPercent":0},"steps":[{"title":"the livedoc rules are","status":"pass","exception":{},"description":"","docString":"{\n    \"andButMustHaveGivenWhenThen\": \"warning\"\n}","values":[],"ruleViolations":[],"type":"Given","sequence":1,"id":"10wnlox4vib-hbl6mmzvtf-b36sr2w7uo","code":"() => {\r\n            ruleOptions.rules = stepContext.docStringAsEntity;\r\n        }","duration":0},{"title":"the following feature","status":"pass","exception":{},"description":"","docString":"feature(\"Validate the use of invalid use of secondary steps\", ()=> {\n    scenario(\"Secondary step ands used without given, when or then\", ()=>{\n        and(\"and sample\", () => { });            \n    });\n});","values":[],"ruleViolations":[],"type":"and","sequence":2,"id":"10wnlox4vib-hbl6mmzvtf-ar4ffseutf","code":"() => {\r\n            outlineGiven = stepContext;\r\n        }","duration":0},{"title":"executing feature","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":3,"id":"10wnlox4vib-hbl6mmzvtf-144l3mxesp9","code":"() => __awaiter(this, void 0, void 0, function* () {\r\n            executionResults = yield livedoc_1.LiveDoc.executeDynamicTestAsync(outlineGiven.docString, ruleOptions);\r\n        })","duration":5},{"title":"a rule violation with the following description is thrown","status":"pass","exception":{},"description":"","docString":"and step definition must be preceded by a Given, When or Then.","values":[],"ruleViolations":[],"type":"Then","sequence":4,"id":"10wnlox4vib-hbl6mmzvtf-4iatou77x","code":"() => {\r\n            const step = executionResults.features[0].scenarios[0].steps[0];\r\n            step.ruleViolations[0].message.should.be.eq(stepContext.docString);\r\n        }","duration":0}],"tables":[{"name":"","description":"","dataTable":[["step"],["and"],["but"]]}],"examples":[{"type":"ScenarioExample","ruleViolations":[],"statistics":{"passCount":4,"failedCount":0,"pendingCount":0,"totalCount":4,"totalRuleViolations":0,"duration":5,"passPercent":1,"failedPercent":0,"pendingPercent":0},"steps":[{"title":"the livedoc rules are","status":"pass","exception":{},"description":"","docString":"{\n    \"andButMustHaveGivenWhenThen\": \"warning\"\n}","values":[],"ruleViolations":[],"type":"Given","sequence":1,"id":"10wnlox4vib-hbl6mmzvtf-b36sr2w7uo","code":"() => {\r\n            ruleOptions.rules = stepContext.docStringAsEntity;\r\n        }","duration":0},{"title":"the following feature","status":"pass","exception":{},"description":"","docString":"feature(\"Validate the use of invalid use of secondary steps\", ()=> {\n    scenario(\"Secondary step ands used without given, when or then\", ()=>{\n        and(\"and sample\", () => { });            \n    });\n});","values":[],"ruleViolations":[],"type":"and","sequence":2,"id":"10wnlox4vib-hbl6mmzvtf-ar4ffseutf","code":"() => {\r\n            outlineGiven = stepContext;\r\n        }","duration":0},{"title":"executing feature","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":3,"id":"10wnlox4vib-hbl6mmzvtf-144l3mxesp9","code":"() => __awaiter(this, void 0, void 0, function* () {\r\n            executionResults = yield livedoc_1.LiveDoc.executeDynamicTestAsync(outlineGiven.docString, ruleOptions);\r\n        })","duration":5},{"title":"a rule violation with the following description is thrown","status":"pass","exception":{},"description":"","docString":"and step definition must be preceded by a Given, When or Then.","values":[],"ruleViolations":[],"type":"Then","sequence":4,"id":"10wnlox4vib-hbl6mmzvtf-4iatou77x","code":"() => {\r\n            const step = executionResults.features[0].scenarios[0].steps[0];\r\n            step.ruleViolations[0].message.should.be.eq(stepContext.docString);\r\n        }","duration":0}],"example":{"step":"and"},"title":"Using secondary steps without a primary step","sequence":1,"id":"10wnlox4vib-hbl6mmzvtf"},{"type":"ScenarioExample","ruleViolations":[],"statistics":{"passCount":4,"failedCount":0,"pendingCount":0,"totalCount":4,"totalRuleViolations":0,"duration":5,"passPercent":1,"failedPercent":0,"pendingPercent":0},"steps":[{"title":"the livedoc rules are","status":"pass","exception":{},"description":"","docString":"{\n    \"andButMustHaveGivenWhenThen\": \"warning\"\n}","values":[],"ruleViolations":[],"type":"Given","sequence":1,"id":"10wnlox4vib-hbl6mmzvtf-b36sr2w7uo","code":"() => {\r\n            ruleOptions.rules = stepContext.docStringAsEntity;\r\n        }","duration":0},{"title":"the following feature","status":"pass","exception":{},"description":"","docString":"feature(\"Validate the use of invalid use of secondary steps\", ()=> {\n    scenario(\"Secondary step buts used without given, when or then\", ()=>{\n        but(\"but sample\", () => { });            \n    });\n});","values":[],"ruleViolations":[],"type":"and","sequence":2,"id":"10wnlox4vib-hbl6mmzvtf-b2zkbddh8g","code":"() => {\r\n            outlineGiven = stepContext;\r\n        }","duration":0},{"title":"executing feature","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":3,"id":"10wnlox4vib-hbl6mmzvtf-144l3mxesp9","code":"() => __awaiter(this, void 0, void 0, function* () {\r\n            executionResults = yield livedoc_1.LiveDoc.executeDynamicTestAsync(outlineGiven.docString, ruleOptions);\r\n        })","duration":5},{"title":"a rule violation with the following description is thrown","status":"pass","exception":{},"description":"","docString":"but step definition must be preceded by a Given, When or Then.","values":[],"ruleViolations":[],"type":"Then","sequence":4,"id":"10wnlox4vib-hbl6mmzvtf-cinvbkk63k","code":"() => {\r\n            const step = executionResults.features[0].scenarios[0].steps[0];\r\n            step.ruleViolations[0].message.should.be.eq(stepContext.docString);\r\n        }","duration":0}],"example":{"step":"but"},"title":"Using secondary steps without a primary step","sequence":2,"id":"10wnlox4vib-hbl6mmzvtf"}],"title":"Using secondary steps without a primary step","description":"The secondary steps and, but can only be used after a primary step given, when or then","tags":[]},{"type":"Scenario","ruleViolations":[],"statistics":{"passCount":11,"failedCount":0,"pendingCount":0,"totalCount":11,"totalRuleViolations":0,"duration":6,"passPercent":1,"failedPercent":0,"pendingPercent":0},"steps":[{"title":"the livedoc rules are","status":"pass","exception":{},"description":"","docString":"{\n    \"enforceTitle\": \"warning\"\n}","values":[],"ruleViolations":[],"type":"Given","sequence":1,"id":"10wnlox4vib-mptc600ux1-o4u4v6wnzh","code":"() => {\r\n            ruleOptions.rules = stepContext.docStringAsEntity;\r\n        }","duration":0},{"title":"the following feature","status":"pass","exception":{},"description":"","docString":"feature(\"\", ()=> {\n    scenario(\"\", ()=>{\n        given(\"\", () => { });            \n        when(\"\", () => { });            \n        then(\"\", () => { });            \n        and(\"\", () => { });            \n        but(\"\", () => { });            \n    });\n    scenarioOutline(`\n        Examples:\n        | col1  |\n        | row 1 |\n        `, ()=>{\n            given(\"\", ()=>{});\n        });\n});","values":[],"ruleViolations":[],"type":"and","sequence":2,"id":"10wnlox4vib-mptc600ux1-oxyvvwttq3","code":"() => {\r\n            outlineGiven = stepContext;\r\n        }","duration":0},{"title":"executing feature","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":3,"id":"10wnlox4vib-mptc600ux1-144l3mxesp9","code":"() => __awaiter(this, void 0, void 0, function* () {\r\n            executionResults = yield livedoc_1.LiveDoc.executeDynamicTestAsync(outlineGiven.docString, ruleOptions);\r\n        })","duration":6},{"title":"the feature has following rule violation added","status":"pass","exception":{},"description":"","docString":"Feature seems to be missing a title. Titles are important to convey the meaning of the Spec.","values":[],"ruleViolations":[],"type":"Then","sequence":4,"id":"10wnlox4vib-mptc600ux1-wne8haoisr","code":"() => {\r\n            const keyword = executionResults.features[0];\r\n            keyword.ruleViolations[0].message.should.be.eq(stepContext.docString);\r\n        }","duration":0},{"title":"the scenarioOutline has following rule violation added","status":"pass","exception":{},"description":"","docString":"Scenario Outline seems to be missing a title. Titles are important to convey the meaning of the Spec.","values":[],"ruleViolations":[],"type":"and","sequence":5,"id":"10wnlox4vib-mptc600ux1-n6mr9znw5h","code":"() => {\r\n            const keyword = executionResults.features[0].scenarios[1];\r\n            keyword.ruleViolations[0].message.should.be.eq(stepContext.docString);\r\n        }","duration":0},{"title":"the scenario has following rule violation added","status":"pass","exception":{},"description":"","docString":"Scenario seems to be missing a title. Titles are important to convey the meaning of the Spec.","values":[],"ruleViolations":[],"type":"and","sequence":6,"id":"10wnlox4vib-mptc600ux1-g37d8lyo8j","code":"() => {\r\n            const keyword = executionResults.features[0].scenarios[0];\r\n            keyword.ruleViolations[0].message.should.be.eq(stepContext.docString);\r\n        }","duration":0},{"title":"the Given has following rule violation added","status":"pass","exception":{},"description":"","docString":"Given seems to be missing a title. Titles are important to convey the meaning of the Spec.","values":[],"ruleViolations":[],"type":"and","sequence":7,"id":"10wnlox4vib-mptc600ux1-cimoogcue8","code":"() => {\r\n            const keyword = executionResults.features[0].scenarios[0].steps[0];\r\n            keyword.ruleViolations[0].message.should.be.eq(stepContext.docString);\r\n        }","duration":0},{"title":"the When has following rule violation added","status":"pass","exception":{},"description":"","docString":"When seems to be missing a title. Titles are important to convey the meaning of the Spec.","values":[],"ruleViolations":[],"type":"and","sequence":8,"id":"10wnlox4vib-mptc600ux1-oyhenm9y4j","code":"() => {\r\n            const keyword = executionResults.features[0].scenarios[0].steps[1];\r\n            keyword.ruleViolations[0].message.should.be.eq(stepContext.docString);\r\n        }","duration":0},{"title":"the Then has following rule violation added","status":"pass","exception":{},"description":"","docString":"Then seems to be missing a title. Titles are important to convey the meaning of the Spec.","values":[],"ruleViolations":[],"type":"and","sequence":9,"id":"10wnlox4vib-mptc600ux1-cinau6q4sg","code":"() => {\r\n            const keyword = executionResults.features[0].scenarios[0].steps[2];\r\n            keyword.ruleViolations[0].message.should.be.eq(stepContext.docString);\r\n        }","duration":0},{"title":"the and has following rule violation added","status":"pass","exception":{},"description":"","docString":"and seems to be missing a title. Titles are important to convey the meaning of the Spec.","values":[],"ruleViolations":[],"type":"and","sequence":10,"id":"10wnlox4vib-mptc600ux1-leryym7xxx","code":"() => {\r\n            const keyword = executionResults.features[0].scenarios[0].steps[3];\r\n            keyword.ruleViolations[0].message.should.be.eq(stepContext.docString);\r\n        }","duration":0},{"title":"the but has following rule violation added","status":"pass","exception":{},"description":"","docString":"but seems to be missing a title. Titles are important to convey the meaning of the Spec.","values":[],"ruleViolations":[],"type":"and","sequence":11,"id":"10wnlox4vib-mptc600ux1-cikrbj85xs","code":"() => {\r\n            const keyword = executionResults.features[0].scenarios[0].steps[4];\r\n            keyword.ruleViolations[0].message.should.be.eq(stepContext.docString);\r\n        }","duration":0}],"title":"Ensure keywords have titles","description":"","tags":[],"sequence":4,"id":"10wnlox4vib-mptc600ux1"},{"type":"Scenario","ruleViolations":[],"statistics":{"passCount":4,"failedCount":0,"pendingCount":0,"totalCount":4,"totalRuleViolations":0,"duration":7,"passPercent":1,"failedPercent":0,"pendingPercent":0},"steps":[{"title":"the livedoc rules are","status":"pass","exception":{},"description":"","docString":"{\n    \"enforceUsingGivenOverBefore\": \"warning\"\n}","values":[],"ruleViolations":[],"type":"Given","sequence":1,"id":"10wnlox4vib-12kzjo2jyff-g2p1h0u9bp","code":"() => {\r\n            ruleOptions.rules = stepContext.docStringAsEntity;\r\n        }","duration":0},{"title":"the following feature","status":"pass","exception":{},"description":"","docString":"feature(\"Enforce using given over before()\", ()=> {\n    scenario(\"A scenario that uses a before()\", ()=>{\n        before(() => { });\n        when(\"some condition\", () => { });            \n    });\n});","values":[],"ruleViolations":[],"type":"and","sequence":2,"id":"10wnlox4vib-12kzjo2jyff-b34ajkrhw0","code":"() => {\r\n            outlineGiven = stepContext;\r\n        }","duration":0},{"title":"executing feature","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":3,"id":"10wnlox4vib-12kzjo2jyff-144l3mxesp9","code":"() => __awaiter(this, void 0, void 0, function* () {\r\n            executionResults = yield livedoc_1.LiveDoc.executeDynamicTestAsync(outlineGiven.docString, ruleOptions);\r\n        })","duration":6},{"title":"a rule violation with the following description is thrown","status":"pass","exception":{},"description":"","docString":"Using before does not help with readability, consider using a given instead.","values":[],"ruleViolations":[],"type":"Then","sequence":4,"id":"10wnlox4vib-12kzjo2jyff-g37iggnivh","code":"() => {\r\n            const scenario = executionResults.features[0].scenarios[0];\r\n            scenario.ruleViolations[0].message.should.be.eq(stepContext.docString);\r\n        }","duration":1}],"title":"Using before instead of given in scenario","description":"","tags":[],"sequence":5,"id":"10wnlox4vib-12kzjo2jyff"},{"type":"ScenarioOutline","ruleViolations":[],"statistics":{"passCount":0,"failedCount":0,"pendingCount":8,"totalCount":8,"totalRuleViolations":0,"duration":0,"passPercent":0,"failedPercent":0,"pendingPercent":1},"steps":[{"title":"the livedoc rules are","status":"pending","exception":{},"description":"","docString":"{\n    \"givenWhenThenMustBeWithinScenario\": \"warning\"\n}","values":[],"ruleViolations":[],"type":"Given","sequence":1,"code":"","duration":0},{"title":"the following feature","status":"pending","exception":{},"description":"","docString":"feature(`Ensure a Given, When and Then exists\nas nothing comes after a Then definition it is not possible for the\nmodel to validate that one exists as the model is built up a step at a time.\n                \n`, () => {\n    scenario(\"no given is used in scenario\", () => {\n        when(\"when is used without a given\", () => { });\n    });\n});","values":[],"ruleViolations":[],"type":"and","sequence":2,"code":"","duration":0},{"title":"executing feature","status":"pending","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":3,"code":"","duration":0},{"title":"a rule violation with the following description is thrown","status":"pending","exception":{},"description":"","docString":"Using before does not help with readability, consider using a given instead.","values":[],"ruleViolations":[],"type":"Then","sequence":4,"code":"","duration":0}],"tables":[{"name":"","description":"","dataTable":[["step","missing step"],["when","given"],["then","when"]]}],"examples":[{"type":"ScenarioExample","ruleViolations":[],"statistics":{"passCount":0,"failedCount":0,"pendingCount":4,"totalCount":4,"totalRuleViolations":0,"duration":0,"passPercent":0,"failedPercent":0,"pendingPercent":1},"steps":[{"title":"the livedoc rules are","status":"pending","exception":{},"description":"","docString":"{\n    \"givenWhenThenMustBeWithinScenario\": \"warning\"\n}","values":[],"ruleViolations":[],"type":"Given","sequence":1,"code":"","duration":0},{"title":"the following feature","status":"pending","exception":{},"description":"","docString":"feature(`Ensure a Given, When and Then exists\nas nothing comes after a Then definition it is not possible for the\nmodel to validate that one exists as the model is built up a step at a time.\n                \n`, () => {\n    scenario(\"no given is used in scenario\", () => {\n        when(\"when is used without a given\", () => { });\n    });\n});","values":[],"ruleViolations":[],"type":"and","sequence":2,"code":"","duration":0},{"title":"executing feature","status":"pending","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":3,"code":"","duration":0},{"title":"a rule violation with the following description is thrown","status":"pending","exception":{},"description":"","docString":"Using before does not help with readability, consider using a given instead.","values":[],"ruleViolations":[],"type":"Then","sequence":4,"code":"","duration":0}],"example":{"step":"when","missingstep":"given"},"title":"Ensure given, when and then exist for a scenario","sequence":1,"id":"10wnlox4vib-dr0aummxwj"},{"type":"ScenarioExample","ruleViolations":[],"statistics":{"passCount":0,"failedCount":0,"pendingCount":4,"totalCount":4,"totalRuleViolations":0,"duration":0,"passPercent":0,"failedPercent":0,"pendingPercent":1},"steps":[{"title":"the livedoc rules are","status":"pending","exception":{},"description":"","docString":"{\n    \"givenWhenThenMustBeWithinScenario\": \"warning\"\n}","values":[],"ruleViolations":[],"type":"Given","sequence":1,"code":"","duration":0},{"title":"the following feature","status":"pending","exception":{},"description":"","docString":"feature(`Ensure a Given, When and Then exists\nas nothing comes after a Then definition it is not possible for the\nmodel to validate that one exists as the model is built up a step at a time.\n                \n`, () => {\n    scenario(\"no given is used in scenario\", () => {\n        then(\"then is used without a when\", () => { });\n    });\n});","values":[],"ruleViolations":[],"type":"and","sequence":2,"code":"","duration":0},{"title":"executing feature","status":"pending","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":3,"code":"","duration":0},{"title":"a rule violation with the following description is thrown","status":"pending","exception":{},"description":"","docString":"Using before does not help with readability, consider using a given instead.","values":[],"ruleViolations":[],"type":"Then","sequence":4,"code":"","duration":0}],"example":{"step":"then","missingstep":"when"},"title":"Ensure given, when and then exist for a scenario","sequence":2,"id":"10wnlox4vib-dr0aummxwj"}],"title":"Ensure given, when and then exist for a scenario","description":"","tags":[]}],"title":"Validate step rules","description":"There are some rules which are technically valid but are not recommended due to readability.\nThese rules can be marked as Warning, Exception or Ignore. By default they are marked as warning.","tags":[],"filename":"D:/dev/git.public/LiveDoc/packages/livedoc-mocha/build/test/Rule Violations/Validate_step_rules.Spec.js","id":"10wnlox4vib","path":"Rule Violations"},{"type":"Feature","ruleViolations":[],"statistics":{"passCount":20,"failedCount":1,"pendingCount":0,"totalCount":21,"totalRuleViolations":0,"duration":2,"passPercent":0.9523809523809523,"failedPercent":0.047619047619047616,"pendingPercent":0},"scenarios":[{"type":"Scenario","ruleViolations":[],"statistics":{"passCount":3,"failedCount":0,"pendingCount":0,"totalCount":3,"totalRuleViolations":0,"duration":0,"passPercent":1,"failedPercent":0,"pendingPercent":0},"steps":[{"title":"A scenario is within a feature","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"Given","sequence":1,"id":"180zejlxqwt-x9fblt5un1-rplgf7m0z1","code":"() => {\r\n        }","duration":0},{"title":"using a scenario","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":2,"id":"180zejlxqwt-x9fblt5un1-10t4wxb4tsd","code":"() => { }","duration":0},{"title":"the feature context should be available","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"Then","sequence":3,"id":"180zejlxqwt-x9fblt5un1-lr1o57wco0","code":"() => {\r\n            context.title.should.be.equal(\"Scenario statement\");\r\n        }","duration":0}],"title":"Able to access featureContext from scenario","description":"","tags":[],"sequence":1,"id":"180zejlxqwt-x9fblt5un1"},{"type":"Scenario","ruleViolations":[],"statistics":{"passCount":4,"failedCount":1,"pendingCount":0,"totalCount":5,"totalRuleViolations":0,"duration":2,"passPercent":0.8,"failedPercent":0.2,"pendingPercent":0},"steps":[{"title":"the current scenario has these properties:","status":"pass","exception":{},"description":"","docString":"","dataTable":[["title","The global variable scenarioContext is set"],["description","with this description  (faile me)"]],"values":[],"ruleViolations":[],"type":"Given","sequence":1,"id":"180zejlxqwt-cnab7sovog-b3017kleww","code":"() => {\r\n            givenContext = stepContext;\r\n        }","duration":0},{"title":"using the scenarioContext","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":2,"id":"180zejlxqwt-cnab7sovog-cn3s214hc0","code":"() => { }","duration":0},{"title":"the scenarioContext.title should match title","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"Then","sequence":3,"id":"180zejlxqwt-cnab7sovog-8mhejqwusl","code":"() => {\r\n            givenContext.tableAsEntity.title.should.be.equal(scenarioContext.title);\r\n        }","duration":0},{"title":"the scenarioContext.description should match description","status":"fail","exception":{"actual":"with this description  (faile me)","expected":"with this description","stackTrace":"AssertionError: expected 'with this description  (faile me)' to equal 'with this description'\n    at and (build\\test\\Scenario.Spec.js:31:62)\n    at Context.<anonymous> (build\\app\\LiveDocUI.js:251:36)\n    at Generator.next (<anonymous>)\n    at D:\\dev\\git.public\\LiveDoc\\packages\\livedoc-mocha\\build\\app\\LiveDocUI.js:7:71\n    at new Promise (<anonymous>)\n    at __awaiter (build\\app\\LiveDocUI.js:3:12)\n    at Context.stepDefinitionContextWrapper (build\\app\\LiveDocUI.js:217:32)\n    at MochaTest.run (build\\app\\MochaTest.js:10:15)","message":"expected 'with this description  (faile me)' to equal 'with this description'"},"description":"","docString":"","values":[],"ruleViolations":[],"type":"and","sequence":4,"id":"180zejlxqwt-cnab7sovog-z0ey9wle2j","code":"() => {\r\n            givenContext.tableAsEntity.description.should.be.equal(scenarioContext.description);\r\n        }","duration":2},{"title":"the scenarioContext.tags should match 'mytag:test,another-tag'","status":"pass","exception":{},"description":"","docString":"","values":["mytag:test,another-tag"],"ruleViolations":[],"type":"and","sequence":5,"id":"180zejlxqwt-cnab7sovog-ggujxqdun4","code":"() => {\r\n            scenarioContext.tags.should.be.eql(tags);\r\n        }","duration":0}],"title":"The global variable scenarioContext is set","description":"with this description","tags":["mytag:test","another-tag"],"sequence":2,"id":"180zejlxqwt-cnab7sovog"},{"type":"Scenario","ruleViolations":[],"statistics":{"passCount":4,"failedCount":0,"pendingCount":0,"totalCount":4,"totalRuleViolations":0,"duration":0,"passPercent":1,"failedPercent":0,"pendingPercent":0},"steps":[{"title":"the current scenario has these properties:","status":"pass","exception":{},"description":"","docString":"","dataTable":[["title","The global variable scenarioContext is set for a different scenario"],["description","with this description2"]],"values":[],"ruleViolations":[],"type":"Given","sequence":1,"id":"180zejlxqwt-33vlq7dwf9-11ywthusfkt","code":"() => {\r\n            givenContext = stepContext;\r\n        }","duration":0},{"title":"using the scenarioContext","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":2,"id":"180zejlxqwt-33vlq7dwf9-cn3s214hc0","code":"() => { }","duration":0},{"title":"the scenarioContext.title should match title","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"Then","sequence":3,"id":"180zejlxqwt-33vlq7dwf9-8mhejqwusl","code":"() => {\r\n            givenContext.tableAsEntity.title.should.be.equal(scenarioContext.title);\r\n        }","duration":0},{"title":"the scenarioContext.description should match description","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"and","sequence":4,"id":"180zejlxqwt-33vlq7dwf9-z0ey9wle2j","code":"() => {\r\n            givenContext.tableAsEntity.description.should.be.equal(scenarioContext.description);\r\n        }","duration":0}],"title":"The global variable scenarioContext is set for a different scenario","description":"with this description2","tags":[],"sequence":3,"id":"180zejlxqwt-33vlq7dwf9"},{"type":"Scenario","ruleViolations":[],"statistics":{"passCount":6,"failedCount":0,"pendingCount":0,"totalCount":6,"totalRuleViolations":0,"duration":0,"passPercent":1,"failedPercent":0,"pendingPercent":0},"steps":[{"title":"the following table:","status":"pass","exception":{},"description":"","docString":"","dataTable":[["property1","value1"],["property2","value2"]],"values":[],"ruleViolations":[],"type":"Given","sequence":1,"id":"180zejlxqwt-q55419hy79-b31flst6ao","code":"() => { }","duration":0},{"title":"some the values '1' and '2' in an and step definition","status":"pass","exception":{},"description":"","docString":"","values":[1,2],"ruleViolations":[],"type":"and","sequence":2,"id":"180zejlxqwt-q55419hy79-dq5fjtbe4d","code":"() => { }","duration":0},{"title":"using the scenarioContext.given","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":3,"id":"180zejlxqwt-q55419hy79-h9uwpdv4xn","code":"() => { }","duration":0},{"title":"the scenarioContext.given should contain the table from the given statement","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"Then","sequence":4,"id":"180zejlxqwt-q55419hy79-hf54skbqyz","code":"() => {\r\n            const entity = scenarioContext.given.tableAsEntity;\r\n            entity.property1.should.be.equal(\"value1\");\r\n            entity.property2.should.be.equal(\"value2\");\r\n        }","duration":0},{"title":"the scenarioContext.and should have '1' item","status":"pass","exception":{},"description":"","docString":"","values":[1],"ruleViolations":[],"type":"and","sequence":5,"id":"180zejlxqwt-q55419hy79-hif07xwi59","code":"() => {\r\n            scenarioContext.and.length.should.be.equal(1);\r\n        }","duration":0},{"title":"the scenarioContext.and[0].values should contain a '1' and a '2' from the given's and","status":"pass","exception":{},"description":"","docString":"","values":[1,2],"ruleViolations":[],"type":"and","sequence":6,"id":"180zejlxqwt-q55419hy79-jkp6unkq0w","code":"() => {\r\n            scenarioContext.and[0].values[0].should.be.equal(stepContext.values[0]);\r\n            scenarioContext.and[0].values[1].should.be.equal(stepContext.values[1]);\r\n        }","duration":0}],"title":"Given step is associated with scenarioContext.given","description":"As the given step and its associated ands and buts provide the context for\nsubsequent steps, its helpful to have easy access to this information rather\nthan forcing the consumer to record the values manually.","tags":[],"sequence":4,"id":"180zejlxqwt-q55419hy79"},{"type":"Scenario","ruleViolations":[],"statistics":{"passCount":3,"failedCount":0,"pendingCount":0,"totalCount":3,"totalRuleViolations":0,"duration":0,"passPercent":1,"failedPercent":0,"pendingPercent":0},"steps":[{"title":"the following table from the second scenario:","status":"pass","exception":{},"description":"","docString":"","dataTable":[["property3","value3"],["property4","value4"]],"values":[],"ruleViolations":[],"type":"Given","sequence":1,"id":"180zejlxqwt-cy7baf03k-b36qu8tdb4","code":"() => { }","duration":0},{"title":"using the scenarioContext.given","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"When","sequence":2,"id":"180zejlxqwt-cy7baf03k-h9uwpdv4xn","code":"() => { }","duration":0},{"title":"the scenarioContext.given should contain the table from the given statement","status":"pass","exception":{},"description":"","docString":"","values":[],"ruleViolations":[],"type":"Then","sequence":3,"id":"180zejlxqwt-cy7baf03k-hf54skbqyz","code":"() => {\r\n            const entity = scenarioContext.given.tableAsEntity;\r\n            entity.property3.should.be.equal(\"value3\");\r\n            entity.property4.should.be.equal(\"value4\");\r\n        }","duration":0}],"title":"Given step is associated with scenarioContext.given and does not provide data from a previous scenario","description":"Ensure that each scenario is isolated from the other.","tags":[],"sequence":5,"id":"180zejlxqwt-cy7baf03k"}],"title":"Scenario statement","description":"Scenarios are used to define the actions or events of a feature","tags":[],"filename":"D:/dev/git.public/LiveDoc/packages/livedoc-mocha/build/test/Scenario.Spec.js","id":"180zejlxqwt","path":""}],"suites":[]}